{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5a70afdf4e72920cc0fd1c3ee3690c9f288a863a71d9e642a0994ba90c130a63",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "810817",
    "logsBloom": "0x
    "blockHash": "0x5d88272139a2144b415258579a2df24ffbf6505d8aeeb62bfef6ce530adfa648",
    "transactionHash": "0x5a70afdf4e72920cc0fd1c3ee3690c9f288a863a71d9e642a0994ba90c130a63",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "810817",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "066fd9ec96d147446c8d1b29b30d3df0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get Funds\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror notOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 5 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        //Set minimum fund amount in USD\\n        // 1. How do we send ETH to this contract?\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didnt send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset array\\n        // funders = new address[](0);\\n        // //withdraw funds\\n        // //transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"send failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund function;\\n\\n    //recieve();\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    //fallback();\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xaa2344c0b860aeadf5f54638b9bcadb88369ce747f4faaa0a25d9d26b164cd27\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //ABI\\n        //Address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        //Price in Eth in terms of USD\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x81bad9fd41e29d00116bc7c2bafbebaa722d2790ef6a2d705b96a32cef3c7c70\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ead380380610ead83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610d48610165600039600081816102e5015261050f0152610d486000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906106af565b6104c3565b6040516100d891906106f5565b60405180910390f35b3480156100ed57600080fd5b506100f66104db565b60405161010391906106f5565b60405180910390f35b34801561011857600080fd5b506101216104e7565b60405161012e919061076f565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661050d565b6040516101639190610799565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107e0565b610531565b6040516101a09190610799565b60405180910390f35b674563918244f400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461057090919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061086a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da91906108b9565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041357600080828154811061038d5761038c61090f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040b9061093e565b91505061036b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161043a906109b8565b60006040518083038185875af1925050503d8060008114610477576040519150601f19603f3d011682016040523d82523d6000602084013e61047c565b606091505b50509050806104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610a19565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061054157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061057c836105ac565b90506000670de0b6b3a764000085836105959190610a39565b61059f9190610ac2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f557600080fd5b505afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190610b80565b5050509150506402540be400816106449190610bfb565b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067c82610651565b9050919050565b61068c81610671565b811461069757600080fd5b50565b6000813590506106a981610683565b92915050565b6000602082840312156106c5576106c461064c565b5b60006106d38482850161069a565b91505092915050565b6000819050919050565b6106ef816106dc565b82525050565b600060208201905061070a60008301846106e6565b92915050565b6000819050919050565b600061073561073061072b84610651565b610710565b610651565b9050919050565b60006107478261071a565b9050919050565b60006107598261073c565b9050919050565b6107698161074e565b82525050565b60006020820190506107846000830184610760565b92915050565b61079381610671565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6107bd816106dc565b81146107c857600080fd5b50565b6000813590506107da816107b4565b92915050565b6000602082840312156107f6576107f561064c565b5b6000610804848285016107cb565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061085460118361080d565b915061085f8261081e565b602082019050919050565b6000602082019050818103600083015261088381610847565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108c4826106dc565b91506108cf836106dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109045761090361088a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610949826106dc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561097c5761097b61088a565b5b600182019050919050565b600081905092915050565b50565b60006109a2600083610987565b91506109ad82610992565b600082019050919050565b60006109c382610995565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a03600b8361080d565b9150610a0e826109cd565b602082019050919050565b60006020820190508181036000830152610a32816109f6565b9050919050565b6000610a44826106dc565b9150610a4f836106dc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a8857610a8761088a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610acd826106dc565b9150610ad8836106dc565b925082610ae857610ae7610a93565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b1281610af3565b8114610b1d57600080fd5b50565b600081519050610b2f81610b09565b92915050565b6000819050919050565b610b4881610b35565b8114610b5357600080fd5b50565b600081519050610b6581610b3f565b92915050565b600081519050610b7a816107b4565b92915050565b600080600080600060a08688031215610b9c57610b9b61064c565b5b6000610baa88828901610b20565b9550506020610bbb88828901610b56565b9450506040610bcc88828901610b6b565b9350506060610bdd88828901610b6b565b9250506080610bee88828901610b20565b9150509295509295909350565b6000610c0682610b35565b9150610c1183610b35565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c5057610c4f61088a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c8d57610c8c61088a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cca57610cc961088a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d0757610d0661088a565b5b82820290509291505056fea2646970667358221220cd6c7db820c29766d380915071ae263d3ef39286518ba86827e27d2ffae59fe864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906106af565b6104c3565b6040516100d891906106f5565b60405180910390f35b3480156100ed57600080fd5b506100f66104db565b60405161010391906106f5565b60405180910390f35b34801561011857600080fd5b506101216104e7565b60405161012e919061076f565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661050d565b6040516101639190610799565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107e0565b610531565b6040516101a09190610799565b60405180910390f35b674563918244f400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461057090919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061086a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da91906108b9565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041357600080828154811061038d5761038c61090f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040b9061093e565b91505061036b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161043a906109b8565b60006040518083038185875af1925050503d8060008114610477576040519150601f19603f3d011682016040523d82523d6000602084013e61047c565b606091505b50509050806104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610a19565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061054157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061057c836105ac565b90506000670de0b6b3a764000085836105959190610a39565b61059f9190610ac2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f557600080fd5b505afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190610b80565b5050509150506402540be400816106449190610bfb565b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067c82610651565b9050919050565b61068c81610671565b811461069757600080fd5b50565b6000813590506106a981610683565b92915050565b6000602082840312156106c5576106c461064c565b5b60006106d38482850161069a565b91505092915050565b6000819050919050565b6106ef816106dc565b82525050565b600060208201905061070a60008301846106e6565b92915050565b6000819050919050565b600061073561073061072b84610651565b610710565b610651565b9050919050565b60006107478261071a565b9050919050565b60006107598261073c565b9050919050565b6107698161074e565b82525050565b60006020820190506107846000830184610760565b92915050565b61079381610671565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6107bd816106dc565b81146107c857600080fd5b50565b6000813590506107da816107b4565b92915050565b6000602082840312156107f6576107f561064c565b5b6000610804848285016107cb565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061085460118361080d565b915061085f8261081e565b602082019050919050565b6000602082019050818103600083015261088381610847565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108c4826106dc565b91506108cf836106dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109045761090361088a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610949826106dc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561097c5761097b61088a565b5b600182019050919050565b600081905092915050565b50565b60006109a2600083610987565b91506109ad82610992565b600082019050919050565b60006109c382610995565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a03600b8361080d565b9150610a0e826109cd565b602082019050919050565b60006020820190508181036000830152610a32816109f6565b9050919050565b6000610a44826106dc565b9150610a4f836106dc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a8857610a8761088a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610acd826106dc565b9150610ad8836106dc565b925082610ae857610ae7610a93565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b1281610af3565b8114610b1d57600080fd5b50565b600081519050610b2f81610b09565b92915050565b6000819050919050565b610b4881610b35565b8114610b5357600080fd5b50565b600081519050610b6581610b3f565b92915050565b600081519050610b7a816107b4565b92915050565b600080600080600060a08688031215610b9c57610b9b61064c565b5b6000610baa88828901610b20565b9550506020610bbb88828901610b56565b9450506040610bcc88828901610b6b565b9350506060610bdd88828901610b6b565b9250506080610bee88828901610b20565b9150509295509295909350565b6000610c0682610b35565b9150610c1183610b35565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c5057610c4f61088a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c8d57610c8c61088a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cca57610cc961088a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d0757610d0661088a565b5b82820290509291505056fea2646970667358221220cd6c7db820c29766d380915071ae263d3ef39286518ba86827e27d2ffae59fe864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}